---
// Drawer.astro: Mobile drawer for navigation/settings
const { title = "Menu", links = [], slot } = Astro.props;
const icons = {
  Home: `<svg width='24' height='24' fill='none' stroke='currentColor' stroke-width='2'><path d='M3 12L12 3l9 9'/><path d='M9 21V12h6v9'/></svg>`,
  Exercises: `<svg width='24' height='24' fill='none' stroke='currentColor' stroke-width='2'><circle cx='12' cy='12' r='10'/><path d='M8 12h8'/></svg>`,
  Forms: `<svg width='24' height='24' fill='none' stroke='currentColor' stroke-width='2'><rect x='4' y='4' width='16' height='16' rx='4'/></svg>`,
  Warmups: `<svg width='24' height='24' fill='none' stroke='currentColor' stroke-width='2'><path d='M12 2v20'/><path d='M2 12h20'/></svg>`,
  Tools: `<svg width='24' height='24' fill='none' stroke='currentColor' stroke-width='2'><circle cx='12' cy='12' r='10'/><path d='M12 8v4l3 3'/></svg>`,
};
---

<style>
  .drawer-backdrop {
    position: fixed;
    inset: 0;
    background: #0008;
    z-index: 1000;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s;
  }
  .drawer.open + .drawer-backdrop {
    opacity: 1;
    pointer-events: auto;
  }
  .drawer {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 80vw;
    max-width: 320px;
    background: #fff;
    box-shadow: 2px 0 16px #0002;
    z-index: 1001;
    transform: translateX(-100%);
    transition: transform 0.3s cubic-bezier(0.4, 1.4, 0.4, 1);
    display: flex;
    flex-direction: column;
    padding: 2rem 1.5rem 1.5rem 1.5rem;
  }
  .drawer.open {
    transform: translateX(0);
  }
  .drawer-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
  }
  .drawer-nav {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .drawer-nav a {
    display: flex;
    align-items: center;
    gap: 0.75em;
    font-size: 1.1em;
    padding: 0.75em 0.5em;
    border-radius: 0.75em;
    text-decoration: none;
    color: #222;
    transition: background 0.2s;
  }
  .drawer-nav a:hover {
    background: #f3f3f3;
  }
  .drawer-nav svg {
    flex-shrink: 0;
    opacity: 0.7;
  }
  .drawer-toggle {
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 1100;
    background: #222;
    color: #fff;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    border: none;
    font-size: 2rem;
    box-shadow: 0 2px 8px #0002;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background 0.2s;
  }
  .drawer-toggle svg {
    transition: transform 0.3s cubic-bezier(0.4, 1.4, 0.4, 1);
  }
  .drawer-toggle.open svg {
    transform: rotate(90deg);
  }
  .drawer-toggle.open {
    background: #c00;
  }
  .drawer.open ~ .drawer-toggle {
    display: none;
  }
  @media (min-width: 600px) {
    .drawer {
      width: 320px;
    }
  }
</style>
<button class="drawer-toggle" id="drawerToggle" aria-label="Menu">
  <svg id="drawerIcon" width="32" height="32" viewBox="0 0 32 32">
    <rect y="8" width="32" height="4" rx="2" fill="currentColor"></rect>
    <rect y="20" width="32" height="4" rx="2" fill="currentColor"></rect>
  </svg>
</button>
<div class="drawer" id="drawer">
  <div class="drawer-header">
    <strong>{title}</strong>
  </div>
  <nav class="drawer-nav">
    {
      links.map((l: { href: string; label: string }) => (
        <a href={l.href}>
          <span set:html={icons[l.label] || ""} />
          <span style="margin-left:0.5em;">{l.label}</span>
        </a>
      ))
    }
  </nav>
  <div style="margin-top:2rem;">
    <slot />
  </div>
</div>
<div class="drawer-backdrop" id="drawerBackdrop"></div>
<script>
  const drawer = document.getElementById("drawer");
  const toggleBtn = document.getElementById("drawerToggle");
  const backdrop = document.getElementById("drawerBackdrop");
  const icon = document.getElementById("drawerIcon");
  let open = false;
  function setIcon(open) {
    if (!icon) return;
    icon.innerHTML = open
      ? `<rect x="8" y="8" width="16" height="4" rx="2" fill="currentColor"/><rect x="8" y="20" width="16" height="4" rx="2" fill="currentColor" transform="rotate(45 16 16)"/><rect x="8" y="20" width="16" height="4" rx="2" fill="currentColor" transform="rotate(-45 16 16)"/>`
      : `<rect y="8" width="32" height="4" rx="2" fill="currentColor" /><rect y="20" width="32" height="4" rx="2" fill="currentColor" />`;
  }
  function openDrawer() {
    if (drawer) drawer.classList.add("open");
    if (backdrop) backdrop.classList.add("open");
    if (toggleBtn) toggleBtn.classList.add("open");
    setIcon(true);
    open = true;
  }
  function closeDrawer() {
    if (drawer) drawer.classList.remove("open");
    if (backdrop) backdrop.classList.remove("open");
    if (toggleBtn) toggleBtn.classList.remove("open");
    setIcon(false);
    open = false;
  }
  toggleBtn &&
    toggleBtn.addEventListener("click", () => {
      open ? closeDrawer() : openDrawer();
    });
  backdrop && backdrop.addEventListener("click", closeDrawer);
  setIcon(false);
</script>
