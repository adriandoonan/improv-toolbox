---
import {
  favoriteKey,
  isStorageReady,
  FAVORITES_EVENT,
} from "../utils/favorites";

interface Props {
  contentType: string;
  contentId?: string;
  slug?: string;
  title?: string;
  description?: string;
}

const { contentType, contentId, slug, title, description } = Astro.props as Props;
const slugValue = contentId ?? slug ?? "";
const resolvedTitle = title ?? "this item";
const resolvedDescription = description ?? "";
const key = contentType && slugValue ? favoriteKey(contentType, slugValue) : "";
const hasKey = Boolean(key);
const storageReady = import.meta.env.SSR ? true : isStorageReady();
const addLabel = "Save to favorites";
const removeLabel = "Remove from favorites";
const srAddLabel = `Add ${resolvedTitle} to favorites`;
const srRemoveLabel = `Remove ${resolvedTitle} from favorites`;
const statusAdd = `${resolvedTitle} added to favorites.`;
const statusRemove = `${resolvedTitle} removed from favorites.`;
const fallbackMessage = hasKey ? "" : "Favorites are unavailable for this entry.";
---

<div
  class="favorite-toggle"
  data-favorite-root
  data-favorite-key={key}
  data-favorite-type={contentType}
  data-favorite-slug={slugValue}
  data-favorite-title={resolvedTitle}
  data-favorite-description={resolvedDescription}
  data-favorite-event={FAVORITES_EVENT}
  data-favorite-add-label={addLabel}
  data-favorite-remove-label={removeLabel}
  data-favorite-sr-add-label={srAddLabel}
  data-favorite-sr-remove-label={srRemoveLabel}
  data-favorite-status-add={statusAdd}
  data-favorite-status-remove={statusRemove}
  data-favorite-fallback-message={fallbackMessage}
>
  <button
    type="button"
    class="favorite-toggle__button"
    aria-pressed="false"
    aria-label={addLabel}
    data-favorite-button
    disabled={!hasKey || !storageReady}
  >
    <svg
      class="favorite-toggle__icon"
      viewBox="0 0 24 24"
      role="presentation"
      aria-hidden="true"
      focusable="false"
      data-favorite-icon
    >
      <path
        class="favorite-toggle__icon-fill"
        d="M12 3.5l2.47 5.34 5.89.5-4.4 3.91 1.32 5.74L12 16.9l-5.28 2.09 1.32-5.74-4.4-3.91 5.89-.5z"
      />
      <path
        class="favorite-toggle__icon-outline"
        d="M12 3.5l2.47 5.34 5.89.5-4.4 3.91 1.32 5.74L12 16.9l-5.28 2.09 1.32-5.74-4.4-3.91 5.89-.5z"
      />
    </svg>
    <span class="sr-only" data-favorite-sr-text>{srAddLabel}</span>
  </button>
  <span
    class="favorite-toggle__status sr-only"
    role="status"
    aria-live="polite"
    data-favorite-status
  ></span>
  <span
    class="favorite-toggle__fallback"
    data-favorite-fallback
    hidden={fallbackMessage ? undefined : true}
  >
    {fallbackMessage}
  </span>
</div>

<style>
  .favorite-toggle {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .favorite-toggle__button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    inline-size: 2.5rem;
    block-size: 2.5rem;
    border-radius: 999px;
    border: 1px solid color-mix(in srgb, var(--color-accent, #ff2f55) 18%, transparent);
    background: color-mix(in srgb, var(--surface-panel, #1f1521) 82%, black 18%);
    color: color-mix(in srgb, var(--color-muted, #cbbfca) 85%, black 15%);
    transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease,
      background 0.2s ease, color 0.2s ease;
  }

  .favorite-toggle__button:hover,
  .favorite-toggle__button:focus-visible {
    border-color: color-mix(in srgb, var(--color-accent, #ff2f55) 40%, transparent);
    background: color-mix(in srgb, var(--surface-panel, #1f1521) 70%, transparent);
    color: color-mix(in srgb, var(--color-accent, #ff2f55) 70%, white 30%);
    transform: translateY(-1px);
    box-shadow: 0 8px 18px rgba(15, 6, 18, 0.3);
  }

  .favorite-toggle__button:focus-visible {
    outline: none;
  }

  .favorite-toggle__button[aria-pressed="true"] {
    background: color-mix(in srgb, var(--color-accent, #ff2f55) 35%, transparent);
    border-color: color-mix(in srgb, var(--color-accent, #ff2f55) 55%, transparent);
    color: var(--color-accent, #ff2f55);
    box-shadow: 0 0 0 1px color-mix(in srgb, var(--color-accent, #ff2f55) 32%, transparent);
  }

  .favorite-toggle__button:disabled {
    opacity: 0.55;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .favorite-toggle__icon {
    inline-size: 1.35rem;
    block-size: 1.35rem;
    display: block;
    transition: color 0.2s ease;
  }

  .favorite-toggle__icon-fill {
    fill: currentColor;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .favorite-toggle__icon-outline {
    fill: none;
    stroke: currentColor;
    stroke-width: 1.6;
    stroke-linecap: round;
    stroke-linejoin: round;
  }

  .favorite-toggle__button[aria-pressed="true"] .favorite-toggle__icon-fill {
    opacity: 1;
  }

  .favorite-toggle__fallback {
    font-size: 0.85rem;
    color: color-mix(in srgb, var(--color-muted, #cbbfca) 80%, black 20%);
  }

  @media (prefers-reduced-motion: reduce) {
    .favorite-toggle__button {
      transition: none;
    }

    .favorite-toggle__button:hover,
    .favorite-toggle__button:focus-visible {
      transform: none;
      box-shadow: none;
    }

    .favorite-toggle__icon-fill {
      transition: none;
    }
  }
</style>
