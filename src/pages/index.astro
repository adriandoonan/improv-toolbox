---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const [exercises, forms, warmups] = await Promise.all([
  getCollection("exercises"),
  getCollection("forms"),
  getCollection("warmups"),
]);

const toolModules = Object.values(
  import.meta.glob(["./tools/*.astro", "./tools/*/index.astro"], { eager: true })
).filter((mod) => mod && typeof mod === "object" && "tool" in mod && mod.tool?.name);

const toolNames = Array.from(
  new Set(toolModules.map((mod) => String(mod.tool.name)).filter(Boolean))
);

const previewNames = (collection, limit = 3) =>
  collection
    .map((entry) => entry?.data?.name)
    .filter(Boolean)
    .slice(0, limit);

const formatPreview = (names) =>
  names.length ? `${names.join(" â€¢ ")}${names.length >= 3 ? " â€¦" : ""}` : "";

const toolsPreview = (() => {
  if (!toolNames.length) return "";
  const highlightIndex = Math.floor(Math.random() * toolNames.length);
  const highlight = toolNames[highlightIndex];
  const rest = toolNames
    .filter((_, index) => index !== highlightIndex)
    .sort((a, b) => {
      if (a === "Timer") return -1;
      if (b === "Timer") return 1;
      return a.localeCompare(b, undefined, { sensitivity: "base" });
    });
  const previewPool = [highlight, ...rest].slice(0, 3);
  return formatPreview(previewPool);
})();

const categories = [
  {
    href: "/exercises",
    label: "Exercises",
    icon: "ðŸŽ­",
    blurb: "Skill-tuned reps for teams and classes.",
    preview: formatPreview(previewNames(exercises)),
  },
  {
    href: "/forms",
    label: "Forms",
    icon: "ðŸ§©",
    blurb: "Layouts, beats, and scenic frameworks.",
    preview: formatPreview(previewNames(forms)),
  },
  {
    href: "/warmups",
    label: "Warmups",
    icon: "ðŸ”¥",
    blurb: "High-energy games to dial in the group mind.",
    preview: formatPreview(previewNames(warmups)),
  },
  {
    href: "/tools",
    label: "Tools",
    icon: "ðŸ§°",
    blurb: "Timers, prompts, and utilities built for rehearsal.",
    preview: toolsPreview,
  },
];

const highlights = [
  {
    title: "Ready in the wings",
    text: "Each resource is mobile-first and class-ready, so you can run it right from your phone in the rehearsal room.",
  },
  {
    title: "Curated by players",
    text: "Everything here is hand-picked from real-world workshops and showsâ€”no filler, just crowd-tested material.",
  },
  {
    title: "Always evolving",
    text: "New exercises, forms, and digital helpers land regularly. Save your favorites and revisit fast.",
  },
];
---

<BaseLayout
  title="Improv Toolbox"
  description="Mobile-first PWA using Pico.css"
>
  <section class="hero panel switcher" aria-labelledby="hero-heading">
    <div class="hero__glow" aria-hidden="true"></div>
    <div class="hero__content stack">
      <p class="hero__eyebrow">Improv, streamlined</p>
      <h1 id="hero-heading">Improv Toolbox</h1>
      <p class="hero__lead">
        Prep faster, play sharper. Build lineups from curated warmups, signature
        forms, and rehearsal-friendly toolsâ€”right when you need them.
      </p>
      <div class="hero__actions cluster">
        <a class="hero__cta hero__cta--primary" href="/tools/timer">
          Launch the timer
        </a>
        <a class="hero__cta hero__cta--secondary" href="/tools">
          Browse all tools
        </a>
      </div>
    </div>
    <div class="hero__image">
      <div class="hero__badge">PWA ready</div>
      <img
        src="/hero-images/hero-portrait.png"
        alt="Two improvisers in motion"
        loading="lazy"
      />
    </div>
  </section>

  <section class="categories" aria-label="Explore the toolbox">
    {
      categories.map((category) => (
        <a class="resource-card category-card" href={category.href}>
          <div class="category-card__header">
            <span class="category-card__icon">{category.icon}</span>
            <h2>{category.label}</h2>
          </div>
          <p class="category-card__blurb">{category.blurb}</p>
          {category.preview ? (
            <p class="category-card__preview" aria-label="Highlights">
              {category.preview}
            </p>
          ) : null}
        </a>
      ))
    }
  </section>

  <section class="highlights" aria-label="Why teachers like this">
    {
      highlights.map((item) => (
        <article class="highlight-card">
          <h3>{item.title}</h3>
          <p>{item.text}</p>
        </article>
      ))
    }
  </section>

  <section class="cta panel" aria-labelledby="cta-heading">
    <div class="cta__content stack">
      <h2 id="cta-heading">Build tonight&apos;s run faster</h2>
      <p>
        Stack a few warmups, drop in a form, cue the timer, and you&apos;re
        ready to play. Bookmark your go-tos and bring the toolbox to every
        rehearsal.
      </p>
      <a class="hero__cta hero__cta--primary" href="/exercises"
        >Plan a session</a
      >
    </div>
  </section>

  <style>
    .hero {
      --switcher-gap: clamp(2rem, 5vw, 3.5rem);
      --switcher-threshold: 48rem;
      position: relative;
      align-items: center;
      padding: clamp(2.5rem, 6vw, 3.5rem);
      background: color-mix(in srgb, var(--surface-panel) 95%, transparent);
      border: 1px solid rgba(255, 255, 255, 0.08);
      isolation: isolate;
    }
    .hero__glow {
      position: absolute;
      inset: 0;
      background: radial-gradient(
          140% 160% at 10% 0%,
          rgba(255, 63, 94, 0.22),
          transparent 60%
        ),
        radial-gradient(
          120% 160% at 90% 10%,
          rgba(255, 108, 140, 0.18),
          transparent 60%
        );
      filter: blur(4px);
      opacity: 0.9;
    }
    .hero__content,
    .hero__image {
      position: relative;
      z-index: 1;
    }
    .hero__eyebrow {
      text-transform: uppercase;
      letter-spacing: 0.26em;
      font-size: 0.78rem;
      font-weight: 700;
      color: rgba(255, 208, 218, 0.9);
    }
    .hero h1 {
      font-size: clamp(2.3rem, 6vw, 3.4rem);
      line-height: 1.05;
    }
    .hero__lead {
      font-size: clamp(1.05rem, 2.6vw, 1.25rem);
      max-width: 44ch;
      color: rgba(255, 235, 239, 0.82);
    }
    .hero__actions {
      gap: 0.75rem;
    }
    .hero__cta {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.8rem 1.75rem;
      border-radius: var(--radius-md);
      font-weight: 700;
      letter-spacing: 0.02em;
      transition:
        transform 0.2s ease,
        box-shadow 0.2s ease;
    }
    .hero__cta--primary {
      background: linear-gradient(135deg, #ff2f55, #ff6b82);
      color: #140408;
      box-shadow: 0 18px 36px rgba(255, 63, 94, 0.4);
    }
    .hero__cta--primary:hover,
    .hero__cta--primary:focus-visible {
      transform: translateY(-2px);
      box-shadow: 0 22px 46px rgba(255, 63, 94, 0.5);
    }
    .hero__cta--secondary {
      background: rgba(255, 255, 255, 0.08);
      border: 1px solid rgba(255, 255, 255, 0.16);
      color: rgba(255, 220, 229, 0.85);
    }
    .hero__cta--secondary:hover,
    .hero__cta--secondary:focus-visible {
      transform: translateY(-2px);
      box-shadow: 0 18px 32px rgba(255, 83, 108, 0.28);
    }
    .hero__image {
      justify-self: center;
      position: relative;
      max-width: min(320px, 100%);
    }
    .hero__image img {
      width: 100%;
      border-radius: 1.75rem;
      box-shadow: 0 26px 54px rgba(10, 5, 16, 0.55);
      border: 1px solid rgba(255, 255, 255, 0.08);
    }
    .hero__badge {
      position: absolute;
      top: -0.5rem;
      right: -0.5rem;
      background: rgba(255, 255, 255, 0.1);
      color: rgba(255, 220, 229, 0.9);
      padding: 0.4rem 0.85rem;
      border-radius: var(--radius-md);
      font-size: 0.7rem;
      letter-spacing: 0.16em;
      text-transform: uppercase;
      backdrop-filter: blur(6px);
    }
    .categories {
      display: grid;
      gap: clamp(1.25rem, 4vw, 1.75rem);
      margin: clamp(2rem, 6vw, 3rem) 0;
    }
    .category-card {
      text-decoration: none;
      background: color-mix(in srgb, var(--surface-panel) 92%, transparent);
      border: 1px solid
        color-mix(in srgb, var(--color-accent) 18%, rgba(255, 255, 255, 0.08));
    }
    .category-card__header {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    .category-card__icon {
      font-size: 1.85rem;
    }
    .category-card__blurb {
      margin: 0;
      color: rgba(255, 235, 239, 0.7);
    }
    .category-card__preview {
      font-size: 0.9rem;
      margin: 0;
      color: rgba(255, 208, 218, 0.85);
    }
    .highlights {
      display: grid;
      gap: clamp(1.25rem, 4vw, 1.75rem);
    }
    .highlight-card {
      border-radius: var(--radius-md);
      padding: 1.5rem;
      background: color-mix(in srgb, var(--surface-raised) 88%, transparent);
      border: 1px solid rgba(255, 255, 255, 0.08);
      box-shadow: 0 18px 32px rgba(7, 3, 12, 0.45);
      display: grid;
      gap: 0.5rem;
    }
    .highlight-card p {
      margin: 0;
      color: rgba(255, 220, 229, 0.75);
    }
    .cta {
      margin: clamp(2.5rem, 6vw, 4rem) auto 0;
      background: radial-gradient(
          120% 120% at 20% 0%,
          rgba(255, 63, 94, 0.28),
          transparent 60%
        ),
        linear-gradient(140deg, #17040a 0%, #2b0512 55%, #1a0308 100%);
      border: 1px solid rgba(255, 255, 255, 0.08);
    }
    .cta__content {
      max-width: 50ch;
    }
    @media (min-width: 720px) {
      .categories {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
      .highlights {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }
    }
    @media (max-width: 719px) {
      .hero__image {
        order: -1;
      }
      .hero__badge {
        right: 0.5rem;
      }
    }
  </style>
</BaseLayout>
