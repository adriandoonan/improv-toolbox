---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import FilterDrawer from "../../components/FilterDrawer.astro";
import { getCollection } from "astro:content";
const exercises = await getCollection("exercises");
const names = Array.from(new Set(exercises.map((e) => e.data.name)));
const focuses = Array.from(
  new Set(exercises.map((e) => e.data.focus).filter(Boolean))
);
const minPeople = Array.from(
  new Set(exercises.map((e) => e.data.minimumPeople).filter(Boolean))
);
---

<BaseLayout>
  <Breadcrumbs items={[{ label: "Exercises" }]} />
  <div style="margin-bottom: 1rem;">
    <FilterDrawer
      fields={[
        { name: "name", label: "Name", type: "select", options: names },
        focuses.length
          ? { name: "focus", label: "Focus", type: "select", options: focuses }
          : null,
        minPeople.length
          ? {
              name: "minimumPeople",
              label: "Minimum People",
              type: "select",
              options: minPeople.map(String),
            }
          : null,
      ].filter(Boolean)}
    />
  </div>
  <ul id="exerciseList" class="no-bullets">
    {
      exercises.map((exercise) => (
        <li class="no-bullets-li">
          <article>
            <header>
              <h2 style="margin-bottom:0.5rem;">
                <a href={`/exercises/${exercise.slug}`}>{exercise.data.name}</a>
              </h2>
            </header>
            <p>{exercise.data.shortDescription}</p>
          </article>
        </li>
      ))
    }
  </ul>
  <script>
    const form = document.querySelector(".filter-form");
    const list = document.getElementById("exerciseList");
    form &&
      form.addEventListener("change", () => {
        const nameInput = form.querySelector('[name="name"]');
        const focusInput = form.querySelector('[name="focus"]');
        const minPeopleInput = form.querySelector('[name="minimumPeople"]');
        const name = nameInput ? nameInput.value : "";
        const focus = focusInput ? focusInput.value : "";
        const minPeople = minPeopleInput ? minPeopleInput.value : "";
        Array.from(list?.children || []).forEach((li) => {
          const el = li;
          const matchesName = !name || el.dataset.name === name;
          const matchesFocus = !focus || el.dataset.focus === focus;
          const matchesMinPeople =
            !minPeople || el.dataset.minimumPeople === minPeople;
          el.style.display =
            matchesName && matchesFocus && matchesMinPeople ? "" : "none";
        });
      });
  </script>
  <style>
    .no-bullets {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .no-bullets-li {
      list-style: none;
      padding-left: 0;
    }
  </style>
</BaseLayout>
