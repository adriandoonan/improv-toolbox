---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import NotesPanel from "../../components/NotesPanel.astro";
import FavoriteToggle from "../../components/FavoriteToggle.astro";
import { getCollection, getEntry } from "astro:content";
export async function getStaticPaths() {
  const exercises = await getCollection("exercises");
  return exercises.map((exercise: any) => ({
    params: { slug: exercise.slug },
  }));
}
const { slug } = Astro.params;
const exercise = await getEntry("exercises", slug as string);
---

<BaseLayout>
  <section class="page-section stack">
    <Breadcrumbs
      items={[
        { label: "Exercises", href: "/exercises" },
        { label: exercise?.data.name },
      ]}
    />
    <article class="content-card">
      <header class="stack" style="gap:0.75rem;">
        <div
          class="content-title-row"
          style="display:flex;align-items:center;gap:0.75rem;flex-wrap:wrap;"
        >
          <h1 class="section-title">{exercise?.data.name}</h1>
          <FavoriteToggle
            contentType="exercise"
            slug={exercise?.slug ?? ""}
            title={exercise?.data.name ?? "Exercise"}
            description={exercise?.data.shortDescription ?? ""}
          />
        </div>
        {(exercise?.data.source || exercise?.data.credit) && (
          <div
            class="content-submeta"
            style="display:flex;flex-wrap:wrap;gap:0.75rem;color:var(--color-muted, #b8aeb4);font-size:0.95rem;"
          >
            {exercise?.data.source && (
              <span>Source · {exercise?.data.source}</span>
            )}
            {exercise?.data.credit && (
              <span>Credit · {exercise?.data.credit}</span>
            )}
          </div>
        )}
        <p class="content-lead">{exercise?.data.shortDescription}</p>
        <ul class="content-meta">
          {exercise?.data.minimumPeople != null && (
            <li>
              <strong>Minimum people</strong>
              <span>{exercise?.data.minimumPeople}</span>
            </li>
          )}
          {exercise?.data.focus && (
            <li>
              <strong>Focus</strong>
              <span>{exercise?.data.focus}</span>
            </li>
          )}
        </ul>
      </header>
      <div class="content-body">
        <p>{exercise?.data.description}</p>
      </div>
    </article>
    <NotesPanel
      contentId={exercise?.slug ?? ""}
      contentType="exercise"
      contentTitle={exercise?.data.name ?? "Exercise"}
    />
  </section>
</BaseLayout>
